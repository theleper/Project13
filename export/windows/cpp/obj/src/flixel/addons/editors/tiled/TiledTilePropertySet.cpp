// Generated by Haxe 3.4.2 (git build master @ 890f8c7)
#include <hxcpp.h>

#ifndef INCLUDED_flixel_addons_editors_tiled_TiledPropertySet
#include <flixel/addons/editors/tiled/TiledPropertySet.h>
#endif
#ifndef INCLUDED_flixel_addons_editors_tiled_TiledTilePropertySet
#include <flixel/addons/editors/tiled/TiledTilePropertySet.h>
#endif

HX_DEFINE_STACK_FRAME(_hx_pos_89babae20dffc326_16_new,"flixel.addons.editors.tiled.TiledTilePropertySet","new",0x96943044,"flixel.addons.editors.tiled.TiledTilePropertySet.new","flixel/addons/editors/tiled/TiledTilePropertySet.hx",16,0xb74dff0a)
HX_LOCAL_STACK_FRAME(_hx_pos_89babae20dffc326_24_addAnimationFrame,"flixel.addons.editors.tiled.TiledTilePropertySet","addAnimationFrame",0x771c8f6e,"flixel.addons.editors.tiled.TiledTilePropertySet.addAnimationFrame","flixel/addons/editors/tiled/TiledTilePropertySet.hx",24,0xb74dff0a)
namespace flixel{
namespace addons{
namespace editors{
namespace tiled{

void TiledTilePropertySet_obj::__construct(int tileID){
            	HX_STACKFRAME(&_hx_pos_89babae20dffc326_16_new)
HXLINE(  17)		super::__construct();
HXLINE(  18)		this->tileID = tileID;
HXLINE(  19)		this->animationFrames = ::Array_obj< ::Dynamic>::__new();
            	}

Dynamic TiledTilePropertySet_obj::__CreateEmpty() { return new TiledTilePropertySet_obj; }

void *TiledTilePropertySet_obj::_hx_vtable = 0;

Dynamic TiledTilePropertySet_obj::__Create(hx::DynamicArray inArgs)
{
	hx::ObjectPtr< TiledTilePropertySet_obj > _hx_result = new TiledTilePropertySet_obj();
	_hx_result->__construct(inArgs[0]);
	return _hx_result;
}

bool TiledTilePropertySet_obj::_hx_isInstanceOf(int inClassId) {
	if (inClassId<=(int)0x4c7e4d28) {
		return inClassId==(int)0x00000001 || inClassId==(int)0x4c7e4d28;
	} else {
		return inClassId==(int)0x5794c536;
	}
}

void TiledTilePropertySet_obj::addAnimationFrame(int tileID,Float duration){
            	HX_STACKFRAME(&_hx_pos_89babae20dffc326_24_addAnimationFrame)
HXDLIN(  24)		this->animationFrames->push( ::Dynamic(hx::Anon_obj::Create(2)
            			->setFixed(0,HX_("duration",54,0f,8e,14),duration)
            			->setFixed(1,HX_("tileID",89,b2,28,1e),tileID)));
            	}


HX_DEFINE_DYNAMIC_FUNC2(TiledTilePropertySet_obj,addAnimationFrame,(void))


hx::ObjectPtr< TiledTilePropertySet_obj > TiledTilePropertySet_obj::__new(int tileID) {
	hx::ObjectPtr< TiledTilePropertySet_obj > __this = new TiledTilePropertySet_obj();
	__this->__construct(tileID);
	return __this;
}

hx::ObjectPtr< TiledTilePropertySet_obj > TiledTilePropertySet_obj::__alloc(hx::Ctx *_hx_ctx,int tileID) {
	TiledTilePropertySet_obj *__this = (TiledTilePropertySet_obj*)(hx::Ctx::alloc(_hx_ctx, sizeof(TiledTilePropertySet_obj), true, "flixel.addons.editors.tiled.TiledTilePropertySet"));
	*(void **)__this = TiledTilePropertySet_obj::_hx_vtable;
	__this->__construct(tileID);
	return __this;
}

TiledTilePropertySet_obj::TiledTilePropertySet_obj()
{
}

void TiledTilePropertySet_obj::__Mark(HX_MARK_PARAMS)
{
	HX_MARK_BEGIN_CLASS(TiledTilePropertySet);
	HX_MARK_MEMBER_NAME(tileID,"tileID");
	HX_MARK_MEMBER_NAME(animationFrames,"animationFrames");
	 ::flixel::addons::editors::tiled::TiledPropertySet_obj::__Mark(HX_MARK_ARG);
	HX_MARK_END_CLASS();
}

void TiledTilePropertySet_obj::__Visit(HX_VISIT_PARAMS)
{
	HX_VISIT_MEMBER_NAME(tileID,"tileID");
	HX_VISIT_MEMBER_NAME(animationFrames,"animationFrames");
	 ::flixel::addons::editors::tiled::TiledPropertySet_obj::__Visit(HX_VISIT_ARG);
}

hx::Val TiledTilePropertySet_obj::__Field(const ::String &inName,hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 6:
		if (HX_FIELD_EQ(inName,"tileID") ) { return hx::Val( tileID ); }
		break;
	case 15:
		if (HX_FIELD_EQ(inName,"animationFrames") ) { return hx::Val( animationFrames ); }
		break;
	case 17:
		if (HX_FIELD_EQ(inName,"addAnimationFrame") ) { return hx::Val( addAnimationFrame_dyn() ); }
	}
	return super::__Field(inName,inCallProp);
}

hx::Val TiledTilePropertySet_obj::__SetField(const ::String &inName,const hx::Val &inValue,hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 6:
		if (HX_FIELD_EQ(inName,"tileID") ) { tileID=inValue.Cast< int >(); return inValue; }
		break;
	case 15:
		if (HX_FIELD_EQ(inName,"animationFrames") ) { animationFrames=inValue.Cast< ::Array< ::Dynamic> >(); return inValue; }
	}
	return super::__SetField(inName,inValue,inCallProp);
}

void TiledTilePropertySet_obj::__GetFields(Array< ::String> &outFields)
{
	outFields->push(HX_HCSTRING("tileID","\x89","\xb2","\x28","\x1e"));
	outFields->push(HX_HCSTRING("animationFrames","\xca","\x2d","\x82","\xbb"));
	super::__GetFields(outFields);
};

#if HXCPP_SCRIPTABLE
static hx::StorageInfo TiledTilePropertySet_obj_sMemberStorageInfo[] = {
	{hx::fsInt,(int)offsetof(TiledTilePropertySet_obj,tileID),HX_HCSTRING("tileID","\x89","\xb2","\x28","\x1e")},
	{hx::fsObject /*cpp::ArrayBase*/ ,(int)offsetof(TiledTilePropertySet_obj,animationFrames),HX_HCSTRING("animationFrames","\xca","\x2d","\x82","\xbb")},
	{ hx::fsUnknown, 0, null()}
};
static hx::StaticInfo *TiledTilePropertySet_obj_sStaticStorageInfo = 0;
#endif

static ::String TiledTilePropertySet_obj_sMemberFields[] = {
	HX_HCSTRING("tileID","\x89","\xb2","\x28","\x1e"),
	HX_HCSTRING("animationFrames","\xca","\x2d","\x82","\xbb"),
	HX_HCSTRING("addAnimationFrame","\x8a","\xa8","\x79","\x60"),
	::String(null()) };

static void TiledTilePropertySet_obj_sMarkStatics(HX_MARK_PARAMS) {
	HX_MARK_MEMBER_NAME(TiledTilePropertySet_obj::__mClass,"__mClass");
};

#ifdef HXCPP_VISIT_ALLOCS
static void TiledTilePropertySet_obj_sVisitStatics(HX_VISIT_PARAMS) {
	HX_VISIT_MEMBER_NAME(TiledTilePropertySet_obj::__mClass,"__mClass");
};

#endif

hx::Class TiledTilePropertySet_obj::__mClass;

void TiledTilePropertySet_obj::__register()
{
	hx::Object *dummy = new TiledTilePropertySet_obj;
	TiledTilePropertySet_obj::_hx_vtable = *(void **)dummy;
	hx::Static(__mClass) = new hx::Class_obj();
	__mClass->mName = HX_HCSTRING("flixel.addons.editors.tiled.TiledTilePropertySet","\x52","\xfe","\x25","\x83");
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &hx::Class_obj::GetNoStaticField;
	__mClass->mSetStaticField = &hx::Class_obj::SetNoStaticField;
	__mClass->mMarkFunc = TiledTilePropertySet_obj_sMarkStatics;
	__mClass->mStatics = hx::Class_obj::dupFunctions(0 /* sStaticFields */);
	__mClass->mMembers = hx::Class_obj::dupFunctions(TiledTilePropertySet_obj_sMemberFields);
	__mClass->mCanCast = hx::TCanCast< TiledTilePropertySet_obj >;
#ifdef HXCPP_VISIT_ALLOCS
	__mClass->mVisitFunc = TiledTilePropertySet_obj_sVisitStatics;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = TiledTilePropertySet_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = TiledTilePropertySet_obj_sStaticStorageInfo;
#endif
	hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

} // end namespace flixel
} // end namespace addons
} // end namespace editors
} // end namespace tiled
