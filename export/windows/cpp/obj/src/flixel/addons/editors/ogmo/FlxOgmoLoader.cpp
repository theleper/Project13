// Generated by Haxe 3.4.2 (git build master @ 890f8c7)
#include <hxcpp.h>

#ifndef INCLUDED_Std
#include <Std.h>
#endif
#ifndef INCLUDED_Type
#include <Type.h>
#endif
#ifndef INCLUDED_Xml
#include <Xml.h>
#endif
#ifndef INCLUDED_flixel_FlxBasic
#include <flixel/FlxBasic.h>
#endif
#ifndef INCLUDED_flixel_FlxObject
#include <flixel/FlxObject.h>
#endif
#ifndef INCLUDED_flixel_addons_editors_ogmo_FlxOgmoLoader
#include <flixel/addons/editors/ogmo/FlxOgmoLoader.h>
#endif
#ifndef INCLUDED_flixel_math_FlxRect
#include <flixel/math/FlxRect.h>
#endif
#ifndef INCLUDED_flixel_tile_FlxBaseTilemap
#include <flixel/tile/FlxBaseTilemap.h>
#endif
#ifndef INCLUDED_flixel_tile_FlxTilemap
#include <flixel/tile/FlxTilemap.h>
#endif
#ifndef INCLUDED_flixel_tile_FlxTilemapAutoTiling
#include <flixel/tile/FlxTilemapAutoTiling.h>
#endif
#ifndef INCLUDED_flixel_util_FlxPool_flixel_math_FlxRect
#include <flixel/util/FlxPool_flixel_math_FlxRect.h>
#endif
#ifndef INCLUDED_flixel_util_IFlxDestroyable
#include <flixel/util/IFlxDestroyable.h>
#endif
#ifndef INCLUDED_flixel_util_IFlxPool
#include <flixel/util/IFlxPool.h>
#endif
#ifndef INCLUDED_flixel_util_IFlxPooled
#include <flixel/util/IFlxPooled.h>
#endif
#ifndef INCLUDED_haxe_xml_Fast
#include <haxe/xml/Fast.h>
#endif
#ifndef INCLUDED_haxe_xml_Parser
#include <haxe/xml/Parser.h>
#endif
#ifndef INCLUDED_haxe_xml__Fast_AttribAccess
#include <haxe/xml/_Fast/AttribAccess.h>
#endif
#ifndef INCLUDED_haxe_xml__Fast_NodeAccess
#include <haxe/xml/_Fast/NodeAccess.h>
#endif
#ifndef INCLUDED_openfl__legacy_Assets
#include <openfl/_legacy/Assets.h>
#endif

HX_DEFINE_STACK_FRAME(_hx_pos_3f0b5130f109ba04_30_new,"flixel.addons.editors.ogmo.FlxOgmoLoader","new",0x7241dd6e,"flixel.addons.editors.ogmo.FlxOgmoLoader.new","flixel/addons/editors/ogmo/FlxOgmoLoader.hx",30,0xc7bbc002)
HX_LOCAL_STACK_FRAME(_hx_pos_3f0b5130f109ba04_67_loadTilemap,"flixel.addons.editors.ogmo.FlxOgmoLoader","loadTilemap",0xf1a379b6,"flixel.addons.editors.ogmo.FlxOgmoLoader.loadTilemap","flixel/addons/editors/ogmo/FlxOgmoLoader.hx",67,0xc7bbc002)
HX_LOCAL_STACK_FRAME(_hx_pos_3f0b5130f109ba04_93_loadEntities,"flixel.addons.editors.ogmo.FlxOgmoLoader","loadEntities",0x787963b9,"flixel.addons.editors.ogmo.FlxOgmoLoader.loadEntities","flixel/addons/editors/ogmo/FlxOgmoLoader.hx",93,0xc7bbc002)
HX_LOCAL_STACK_FRAME(_hx_pos_3f0b5130f109ba04_111_loadRectangles,"flixel.addons.editors.ogmo.FlxOgmoLoader","loadRectangles",0x3448f0dc,"flixel.addons.editors.ogmo.FlxOgmoLoader.loadRectangles","flixel/addons/editors/ogmo/FlxOgmoLoader.hx",111,0xc7bbc002)
HX_LOCAL_STACK_FRAME(_hx_pos_3f0b5130f109ba04_129_getProperty,"flixel.addons.editors.ogmo.FlxOgmoLoader","getProperty",0xada2d619,"flixel.addons.editors.ogmo.FlxOgmoLoader.getProperty","flixel/addons/editors/ogmo/FlxOgmoLoader.hx",129,0xc7bbc002)
namespace flixel{
namespace addons{
namespace editors{
namespace ogmo{

void FlxOgmoLoader_obj::__construct( ::Dynamic LevelData){
            	HX_GC_STACKFRAME(&_hx_pos_3f0b5130f109ba04_30_new)
HXLINE(  32)		::String str = HX_("",00,00,00,00);
HXLINE(  35)		if (::Std_obj::is(LevelData,hx::ClassOf< ::hx::Class >())) {
HXLINE(  37)			str = ( (::String)(::Type_obj::createInstance(LevelData,::cpp::VirtualArray_obj::__new(0))) );
            		}
            		else {
HXLINE(  40)			if (::Std_obj::is(LevelData,hx::ClassOf< ::String >())) {
HXLINE(  42)				str = ::openfl::_legacy::Assets_obj::getText(( (::String)(LevelData) ));
            			}
            		}
HXLINE(  45)		this->_xml = ::haxe::xml::Parser_obj::parse(str,null());
HXLINE(  46)		this->_fastXml =  ::haxe::xml::Fast_obj::__alloc( HX_CTX ,this->_xml->firstElement());
HXLINE(  48)		this->width = ::Std_obj::parseInt(this->_fastXml->att->resolve(HX_("width",06,b6,62,ca)));
HXLINE(  49)		this->height = ::Std_obj::parseInt(this->_fastXml->att->resolve(HX_("height",e7,07,4c,02)));
            	}

Dynamic FlxOgmoLoader_obj::__CreateEmpty() { return new FlxOgmoLoader_obj; }

void *FlxOgmoLoader_obj::_hx_vtable = 0;

Dynamic FlxOgmoLoader_obj::__Create(hx::DynamicArray inArgs)
{
	hx::ObjectPtr< FlxOgmoLoader_obj > _hx_result = new FlxOgmoLoader_obj();
	_hx_result->__construct(inArgs[0]);
	return _hx_result;
}

bool FlxOgmoLoader_obj::_hx_isInstanceOf(int inClassId) {
	return inClassId==(int)0x00000001 || inClassId==(int)0x18d37df2;
}

 ::flixel::tile::FlxTilemap FlxOgmoLoader_obj::loadTilemap( ::Dynamic TileGraphic,hx::Null< int >  __o_TileWidth,hx::Null< int >  __o_TileHeight,::String __o_TileLayer){
int TileWidth = __o_TileWidth.Default(16);
int TileHeight = __o_TileHeight.Default(16);
::String TileLayer = __o_TileLayer.Default(HX_HCSTRING("tiles","\x85","\xfd","\x34","\x10"));
            	HX_GC_STACKFRAME(&_hx_pos_3f0b5130f109ba04_67_loadTilemap)
HXLINE(  68)		 ::flixel::tile::FlxTilemap tileMap =  ::flixel::tile::FlxTilemap_obj::__alloc( HX_CTX );
HXLINE(  69)		tileMap->loadMapFromCSV(this->_fastXml->node->resolve(TileLayer)->get_innerData(),TileGraphic,TileWidth,TileHeight,null(),null(),null(),null());
HXLINE(  70)		return tileMap;
            	}


HX_DEFINE_DYNAMIC_FUNC4(FlxOgmoLoader_obj,loadTilemap,return )

void FlxOgmoLoader_obj::loadEntities( ::Dynamic EntityLoadCallback,::String __o_EntityLayer){
::String EntityLayer = __o_EntityLayer.Default(HX_HCSTRING("entities","\x41","\x96","\x95","\x92"));
            	HX_STACKFRAME(&_hx_pos_3f0b5130f109ba04_93_loadEntities)
HXLINE(  94)		 ::haxe::xml::Fast actors = this->_fastXml->node->resolve(EntityLayer);
HXLINE(  97)		{
HXLINE(  97)			 ::Dynamic a = actors->get_elements();
HXDLIN(  97)			while(( (bool)(a->__Field(HX_("hasNext",6d,a5,46,18),hx::paccDynamic)()) )){
HXLINE(  97)				 ::haxe::xml::Fast a1 = ( ( ::haxe::xml::Fast)(a->__Field(HX_("next",f3,84,02,49),hx::paccDynamic)()) );
HXLINE(  99)				::String _hx_tmp = a1->get_name();
HXDLIN(  99)				EntityLoadCallback(_hx_tmp,a1->x);
            			}
            		}
            	}


HX_DEFINE_DYNAMIC_FUNC2(FlxOgmoLoader_obj,loadEntities,(void))

void FlxOgmoLoader_obj::loadRectangles( ::Dynamic RectLoadCallback,::String __o_RectLayer){
::String RectLayer = __o_RectLayer.Default(HX_HCSTRING("rectangles","\x64","\xd5","\xbc","\x33"));
            	HX_STACKFRAME(&_hx_pos_3f0b5130f109ba04_111_loadRectangles)
HXLINE( 112)		 ::haxe::xml::Fast rects = this->_fastXml->node->resolve(RectLayer);
HXLINE( 114)		{
HXLINE( 114)			 ::Dynamic r = rects->get_elements();
HXDLIN( 114)			while(( (bool)(r->__Field(HX_("hasNext",6d,a5,46,18),hx::paccDynamic)()) )){
HXLINE( 114)				 ::haxe::xml::Fast r1 = ( ( ::haxe::xml::Fast)(r->__Field(HX_("next",f3,84,02,49),hx::paccDynamic)()) );
HXLINE( 116)				Float X = ::Std_obj::parseInt(r1->x->get(HX_("x",78,00,00,00)));
HXDLIN( 116)				Float Y = ::Std_obj::parseInt(r1->x->get(HX_("y",79,00,00,00)));
HXDLIN( 116)				Float Width = ::Std_obj::parseInt(r1->x->get(HX_("w",77,00,00,00)));
HXDLIN( 116)				Float Height = ::Std_obj::parseInt(r1->x->get(HX_("h",68,00,00,00)));
HXDLIN( 116)				 ::flixel::math::FlxRect _this = ::flixel::math::FlxRect_obj::_pool->get();
HXDLIN( 116)				_this->x = X;
HXDLIN( 116)				_this->y = Y;
HXDLIN( 116)				_this->width = Width;
HXDLIN( 116)				_this->height = Height;
HXDLIN( 116)				 ::flixel::math::FlxRect rect = _this;
HXDLIN( 116)				rect->_inPool = false;
HXDLIN( 116)				RectLoadCallback(rect);
            			}
            		}
            	}


HX_DEFINE_DYNAMIC_FUNC2(FlxOgmoLoader_obj,loadRectangles,(void))

::String FlxOgmoLoader_obj::getProperty(::String name){
            	HX_STACKFRAME(&_hx_pos_3f0b5130f109ba04_129_getProperty)
HXDLIN( 129)		return this->_fastXml->att->resolve(name);
            	}


HX_DEFINE_DYNAMIC_FUNC1(FlxOgmoLoader_obj,getProperty,return )


hx::ObjectPtr< FlxOgmoLoader_obj > FlxOgmoLoader_obj::__new( ::Dynamic LevelData) {
	hx::ObjectPtr< FlxOgmoLoader_obj > __this = new FlxOgmoLoader_obj();
	__this->__construct(LevelData);
	return __this;
}

hx::ObjectPtr< FlxOgmoLoader_obj > FlxOgmoLoader_obj::__alloc(hx::Ctx *_hx_ctx, ::Dynamic LevelData) {
	FlxOgmoLoader_obj *__this = (FlxOgmoLoader_obj*)(hx::Ctx::alloc(_hx_ctx, sizeof(FlxOgmoLoader_obj), true, "flixel.addons.editors.ogmo.FlxOgmoLoader"));
	*(void **)__this = FlxOgmoLoader_obj::_hx_vtable;
	__this->__construct(LevelData);
	return __this;
}

FlxOgmoLoader_obj::FlxOgmoLoader_obj()
{
}

void FlxOgmoLoader_obj::__Mark(HX_MARK_PARAMS)
{
	HX_MARK_BEGIN_CLASS(FlxOgmoLoader);
	HX_MARK_MEMBER_NAME(width,"width");
	HX_MARK_MEMBER_NAME(height,"height");
	HX_MARK_MEMBER_NAME(_xml,"_xml");
	HX_MARK_MEMBER_NAME(_fastXml,"_fastXml");
	HX_MARK_END_CLASS();
}

void FlxOgmoLoader_obj::__Visit(HX_VISIT_PARAMS)
{
	HX_VISIT_MEMBER_NAME(width,"width");
	HX_VISIT_MEMBER_NAME(height,"height");
	HX_VISIT_MEMBER_NAME(_xml,"_xml");
	HX_VISIT_MEMBER_NAME(_fastXml,"_fastXml");
}

hx::Val FlxOgmoLoader_obj::__Field(const ::String &inName,hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 4:
		if (HX_FIELD_EQ(inName,"_xml") ) { return hx::Val( _xml ); }
		break;
	case 5:
		if (HX_FIELD_EQ(inName,"width") ) { return hx::Val( width ); }
		break;
	case 6:
		if (HX_FIELD_EQ(inName,"height") ) { return hx::Val( height ); }
		break;
	case 8:
		if (HX_FIELD_EQ(inName,"_fastXml") ) { return hx::Val( _fastXml ); }
		break;
	case 11:
		if (HX_FIELD_EQ(inName,"loadTilemap") ) { return hx::Val( loadTilemap_dyn() ); }
		if (HX_FIELD_EQ(inName,"getProperty") ) { return hx::Val( getProperty_dyn() ); }
		break;
	case 12:
		if (HX_FIELD_EQ(inName,"loadEntities") ) { return hx::Val( loadEntities_dyn() ); }
		break;
	case 14:
		if (HX_FIELD_EQ(inName,"loadRectangles") ) { return hx::Val( loadRectangles_dyn() ); }
	}
	return super::__Field(inName,inCallProp);
}

hx::Val FlxOgmoLoader_obj::__SetField(const ::String &inName,const hx::Val &inValue,hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 4:
		if (HX_FIELD_EQ(inName,"_xml") ) { _xml=inValue.Cast<  ::Xml >(); return inValue; }
		break;
	case 5:
		if (HX_FIELD_EQ(inName,"width") ) { width=inValue.Cast< int >(); return inValue; }
		break;
	case 6:
		if (HX_FIELD_EQ(inName,"height") ) { height=inValue.Cast< int >(); return inValue; }
		break;
	case 8:
		if (HX_FIELD_EQ(inName,"_fastXml") ) { _fastXml=inValue.Cast<  ::haxe::xml::Fast >(); return inValue; }
	}
	return super::__SetField(inName,inValue,inCallProp);
}

void FlxOgmoLoader_obj::__GetFields(Array< ::String> &outFields)
{
	outFields->push(HX_HCSTRING("width","\x06","\xb6","\x62","\xca"));
	outFields->push(HX_HCSTRING("height","\xe7","\x07","\x4c","\x02"));
	outFields->push(HX_HCSTRING("_xml","\xd8","\xb2","\x26","\x3f"));
	outFields->push(HX_HCSTRING("_fastXml","\x1c","\x46","\xe8","\x17"));
	super::__GetFields(outFields);
};

#if HXCPP_SCRIPTABLE
static hx::StorageInfo FlxOgmoLoader_obj_sMemberStorageInfo[] = {
	{hx::fsInt,(int)offsetof(FlxOgmoLoader_obj,width),HX_HCSTRING("width","\x06","\xb6","\x62","\xca")},
	{hx::fsInt,(int)offsetof(FlxOgmoLoader_obj,height),HX_HCSTRING("height","\xe7","\x07","\x4c","\x02")},
	{hx::fsObject /*::Xml*/ ,(int)offsetof(FlxOgmoLoader_obj,_xml),HX_HCSTRING("_xml","\xd8","\xb2","\x26","\x3f")},
	{hx::fsObject /*::haxe::xml::Fast*/ ,(int)offsetof(FlxOgmoLoader_obj,_fastXml),HX_HCSTRING("_fastXml","\x1c","\x46","\xe8","\x17")},
	{ hx::fsUnknown, 0, null()}
};
static hx::StaticInfo *FlxOgmoLoader_obj_sStaticStorageInfo = 0;
#endif

static ::String FlxOgmoLoader_obj_sMemberFields[] = {
	HX_HCSTRING("width","\x06","\xb6","\x62","\xca"),
	HX_HCSTRING("height","\xe7","\x07","\x4c","\x02"),
	HX_HCSTRING("_xml","\xd8","\xb2","\x26","\x3f"),
	HX_HCSTRING("_fastXml","\x1c","\x46","\xe8","\x17"),
	HX_HCSTRING("loadTilemap","\xa8","\xae","\x2c","\x16"),
	HX_HCSTRING("loadEntities","\x87","\x82","\xfe","\x4b"),
	HX_HCSTRING("loadRectangles","\x2a","\xdf","\x6d","\xca"),
	HX_HCSTRING("getProperty","\x0b","\x0b","\x2c","\xd2"),
	::String(null()) };

static void FlxOgmoLoader_obj_sMarkStatics(HX_MARK_PARAMS) {
	HX_MARK_MEMBER_NAME(FlxOgmoLoader_obj::__mClass,"__mClass");
};

#ifdef HXCPP_VISIT_ALLOCS
static void FlxOgmoLoader_obj_sVisitStatics(HX_VISIT_PARAMS) {
	HX_VISIT_MEMBER_NAME(FlxOgmoLoader_obj::__mClass,"__mClass");
};

#endif

hx::Class FlxOgmoLoader_obj::__mClass;

void FlxOgmoLoader_obj::__register()
{
	hx::Object *dummy = new FlxOgmoLoader_obj;
	FlxOgmoLoader_obj::_hx_vtable = *(void **)dummy;
	hx::Static(__mClass) = new hx::Class_obj();
	__mClass->mName = HX_HCSTRING("flixel.addons.editors.ogmo.FlxOgmoLoader","\x7c","\x4e","\x17","\xd5");
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &hx::Class_obj::GetNoStaticField;
	__mClass->mSetStaticField = &hx::Class_obj::SetNoStaticField;
	__mClass->mMarkFunc = FlxOgmoLoader_obj_sMarkStatics;
	__mClass->mStatics = hx::Class_obj::dupFunctions(0 /* sStaticFields */);
	__mClass->mMembers = hx::Class_obj::dupFunctions(FlxOgmoLoader_obj_sMemberFields);
	__mClass->mCanCast = hx::TCanCast< FlxOgmoLoader_obj >;
#ifdef HXCPP_VISIT_ALLOCS
	__mClass->mVisitFunc = FlxOgmoLoader_obj_sVisitStatics;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = FlxOgmoLoader_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = FlxOgmoLoader_obj_sStaticStorageInfo;
#endif
	hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

} // end namespace flixel
} // end namespace addons
} // end namespace editors
} // end namespace ogmo
